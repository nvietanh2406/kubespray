I. Pre requirements:
# Do on ansible node
1.1 Install kubectl:
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
kubectl version --client --output=yaml

1.2 Enable shell autocompletion:
echo 'source /usr/share/bash-completion/bash_completion' >>~/.bashrc
echo 'source <(kubectl completion bash)' >>~/.bashrc
echo 'alias k=kubectl' >>~/.bashrc
echo 'complete -o default -F __start_kubectl k' >>~/.bashrc
source ~/.bashrc

1.3 Gen ssh key:
ssh-keygen -t rsa -b 4096 -C "root@k8s-dev02-ansible01"

1.4 Copy ansible's ssh key:
Copy Ansible's public key to all node (root user)
Eg:
echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDn6X26Auv9NN3l7Xz1szfUg3G98wN7Xs8Kprw7JzSPHhzX/l04RSltusFo6xg4elqoZjzthtetLeFgdBBzZNVns+13FkFfpLh0H2kpFhkP2hu963PDKchL+6j8BF7W8eez5oBO/H2O8upN+jhMnab55ayj9MATuznuaZfA6iD/5VPS+AD+Dn4TIBG8sWJ7InYSdEtxdQKgkXvtquVPs+AEKKr3seyz8J/eh/7bVwlGj6wRfXrAfq96/9PdFs0wC0ff7X9o22HDL94A7H7ofbs1AvuHpJ8++MIq25E0/fLvM5xavWNRVTfNW0RaWimiUN/qwmm6PnXymq0Oug3gUhWmYybmNKpcYUXRrb3Y/A0USto6jWmbo/tfalTutMbChJPSmWbyMuOMWrOnNm3QJnY2OPCI/VXw/e1hwl+Vy8CzoCkHsZKNK7khuYCW2SjO2pYPn9mzOOGU0Tq1kiZ5y2ek6rlsK/NnIz19nMQE0tX9Pk9cjEjuvWaEW/mRodN42AqERQ02DUmKBgbsxF3OUaRh9R+54T43pQ2DNw0xHDAxyVXEM3nmVY7JOZBc8+Qt0hd3vDn6e+GFiQY3jS2fDFZp51DlL3Dz4uVMhJEkktzILxJUbhslPkQqabw1QVbVp+f2oQf3wpL6Auo61PsotRSSEf9XUwj8xCZhpXi5WP6Q2Q== root@k8s-dev02-ansible01" >> /root/.ssh/authorized_keys

# Do on worker node
# 2.1 Install longhorn requirements:
sudo apt update && apt install nfs-common open-iscsi -y
sudo systemctl enable iscsid rpcbind --now
# 2.2 Create longhorn data workspace:
mkdir -p /data/longhorn-pvc

II. Install Kubespray:
# Do on ansible node
1. Install kubespray:
mkdir -p /opt/kubernetes && cd /opt/kubernetes/ 
git clone https://git.datx.com.vn/dso/kubespray.git
cd kubespray
pip install -r requirements.txt
#Deploy kubespray with ansible Playbook
/usr/local/bin/ansible-playbook -i inventory/cmc-k8s-dev02/hosts.yaml  --become --become-user=root cluster.yml

#if get error: The conditional check 'groups.get('kube_control_plane')' failed. The error was: Conditional is marked as unsafe, and cannot be evaluated
#run this command:
pip install ansible-core==2.14.11
#After that, re-run deploy kubespray command.

#Copy config file of K8S Cluster  from master01 node to manage node
mkdir /root/.kube 
rsync root@10.32.192.11:/etc/kubernetes/admin.conf /root/.kube/config

#Update server cluster config file on manage node
sed -i 's/127.0.0.1:6443/10.32.192.11:6443/g' /root/.kube/config

#After installing successfully, verify K8S cluster status:
kubectl get node -o wide
kubectl get --raw='/readyz?verbose'

2. Install Helm:
curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
chmod +x get_helm.sh
./get_helm.sh
ln -s /usr/local/bin/helm /bin/helm
